<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Colsrch的小破站</title>
  <icon>https://o.static.colsrch.cn/image/favicon.png</icon>
  <subtitle>愿多年以后，我可以酌一杯清酒，烂醉如泥，梦中回到我们的曾经。</subtitle>
  <link href="https://colsrch.cn/atom.xml" rel="self"/>
  
  <link href="https://colsrch.cn/"/>
  <updated>2024-03-12T09:58:18.000Z</updated>
  <id>https://colsrch.cn/</id>
  
  <author>
    <name>Colsrch</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>配置 WSL 开发 Flet 应用</title>
    <link href="https://colsrch.cn/posts/59012193/"/>
    <id>https://colsrch.cn/posts/59012193/</id>
    <published>2023-09-06T06:01:49.000Z</published>
    <updated>2024-03-12T09:58:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-GStreamer-库"><a href="#安装-GStreamer-库" class="headerlink" title="安装 GStreamer 库"></a>安装 GStreamer 库</h2><p>在 Linux 中运行 Flet 应用需要安装 <a href="https://gstreamer.freedesktop.org/">GStreamer</a> 库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio</span><br></pre></td></tr></table></figure><blockquote><p>有关在 Linux 安装 GStreamer 的详细信息，参阅<a href="https://gstreamer.freedesktop.org/documentation/installing/on-linux.html?gi-language=c">本指南</a></p></blockquote><h2 id="安装-WSLg"><a href="#安装-WSLg" class="headerlink" title="安装 WSLg"></a>安装 WSLg</h2><blockquote><p>WSLg 仅在 WSL2 下运行</p></blockquote><p>打开<code>终端（管理员）</code>，键入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br><span class="line">wsl --update</span><br></pre></td></tr></table></figure><p>之后，你可以在开始菜单中找到一个图标</p><div class="tag-plugin colorful note" color="yellow"><div class="title">注意</div><div class="body"><p>若提示 <code>0x80240438</code>，请检查是否关闭代理</p></div></div><h2 id="配置-WSL"><a href="#配置-WSL" class="headerlink" title="配置 WSL"></a>配置 WSL</h2><p>首先检查当前 DISPLAY 值是否为<code>:0</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $DISPLAY</span><br></pre></td></tr></table></figure><p>若不为<code>:0</code>, 打开你的 shell 配置文件，如<code>.bashrc</code>、<code>.zshrc</code>, 加入下面这一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export DISPLAY=:0</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">如何在 WSL 中开发 Flet 应用</summary>
    
    
    
    <category term="教程" scheme="https://colsrch.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://colsrch.cn/tags/Python/"/>
    
    <category term="WSL2" scheme="https://colsrch.cn/tags/WSL2/"/>
    
  </entry>
  
  <entry>
    <title>Volantis 如何在主页添加卡片</title>
    <link href="https://colsrch.cn/posts/71314686/"/>
    <id>https://colsrch.cn/posts/71314686/</id>
    <published>2022-12-30T08:14:26.000Z</published>
    <updated>2023-04-07T11:25:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>简单记录一下如何在 Volantis 主题的主页添加下面这种样子的卡片。</p><p><img src="https://bu.dusays.com/2022/12/30/63ae9f1fb7de4.png"></p><h2 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h2><p>找到主题配置文件 <strong>文章布局(<code>article</code>)</strong> 部分，我们要修改 <code>preview</code> 里面的相关配置。</p><ol><li>关闭自动生成 title: <code>auto_title: false</code></li><li>关闭自动生成摘要: <code>auto_excerpt: false</code></li><li>关闭作者显示: <code>author: false</code></li><li>阅读更多按钮显示规则改为自动: <code>readmore: auto</code></li><li>关闭置顶图标显示（把默认那个图标注释掉就可以）: <code>pin_icon: </code></li></ol><h2 id="修改页面-front-matter"><a href="#修改页面-front-matter" class="headerlink" title="修改页面 front-matter"></a>修改页面 front-matter</h2><p>在需要将其放至首页顶部的页面的 front-matter 中配置。</p><ol><li>使用 seo_title 而不是 title</li><li>置顶该页面: <code>pin: true</code></li><li>拒绝蜘蛛爬取（避免影响权重）: <code>robots: noindex,nofollow</code></li><li>关闭评论（有没有其实都一样，反正别人不知道怎么打开你这个页面）: <code>comment: false</code></li><li>这个页面应该为一个 page 而不是 post: <code>layout: page</code></li></ol><p>接下来自由发挥</p><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><p>如果想要文章页面的卡片也不显示阅读更多，可以在文章的 <code>front-matter</code> 中配置 <code>readmore: false</code>。</p><h2 id="完结撒花🎈"><a href="#完结撒花🎈" class="headerlink" title="完结撒花🎈"></a>完结撒花🎈</h2><p>好耶~又水了一篇😝</p>]]></content>
    
    
    <summary type="html">Hexo Volantis 主题如何在主页添加无任何额外信息的卡片</summary>
    
    
    
    <category term="教程" scheme="https://colsrch.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Hexo" scheme="https://colsrch.cn/tags/Hexo/"/>
    
    <category term="Volantis" scheme="https://colsrch.cn/tags/Volantis/"/>
    
  </entry>
  
  <entry>
    <title>ping 每隔几秒出现一次延迟特别大的解决方法</title>
    <link href="https://colsrch.cn/posts/3d50f4a2/"/>
    <id>https://colsrch.cn/posts/3d50f4a2/</id>
    <published>2022-09-14T06:41:53.000Z</published>
    <updated>2022-10-25T02:39:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近一段时间因为这个问题，在 Windows 使用 Remote SSH 连接远程主机写东西总会间隔性卡顿，现记录下解决方法。</p><p><img src="https://bu.dusays.com/2022/09/14/632179193e738.png"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在 <code>服务</code> 中找到 <code>WLAN AutoConfig</code>, 并重新启动它</p><p><img src="https://bu.dusays.com/2022/09/14/632178d648b56.png"></p>]]></content>
    
    
    <summary type="html">SSH 连接远程主机间隔性卡顿问题解决</summary>
    
    
    
    <category term="教程" scheme="https://colsrch.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Windows" scheme="https://colsrch.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows 使用技巧之我见</title>
    <link href="https://colsrch.cn/posts/90c4210a/"/>
    <id>https://colsrch.cn/posts/90c4210a/</id>
    <published>2022-05-16T13:27:17.000Z</published>
    <updated>2024-03-12T09:58:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>这里以 <code>Windows 11</code> 为例，从一台全新的<del>机器</del>系统开始讲解</p><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>现在学生党的计算机存储配置一般都为 <code>512G</code> 固态 、 <code>128G</code> &#x2F; <code>256G</code> &#x2F; <code>512G</code> 固态 + <code>1TB</code> 机械 等。但不管怎么说，都一定会有最小 128GB 固态的存在。</p><p>因此个人建议:</p><ul><li>当固态硬盘为 <code>512GB</code> 及以下时，不对其进行分区，而是全部用来做系统盘。</li><li>当固态硬盘为 <code>512GB</code> 以上时，可以选择分出 <code>512GB</code> 来作为系统盘，剩下的根据自己的一个需求再进行分区。</li></ul><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><div class="tag-plugin colorful note" color="cyan"><div class="body"><p>此处假设你有一个全新的系统，并且已经初始化，登录账号成功进入桌面。</p></div></div><h3 id="修改默认库保存位置"><a href="#修改默认库保存位置" class="headerlink" title="修改默认库保存位置"></a>修改默认库保存位置</h3><p>之所以把它放在第一步，是因为避免后面的操作对默认目录进行了写操作，从而增加迁移的成本。</p><p><img src="https://bu.dusays.com/2022/05/16/62825af16ec28.png"></p><p>打开资源管理器，对上面框住的五个库依次打开属性对话框，把位置的盘符改成E，保存便好。</p><p>至于为什么不修改桌面库的位置，<psw>真的没必要啊喂</psw></p><h3 id="修改新内容默认保存位置"><a href="#修改新内容默认保存位置" class="headerlink" title="修改新内容默认保存位置"></a>修改新内容默认保存位置</h3><p>这个在设置中，打开设置，找到下图的位置，并参照着修改。这里的应用存放目录设置仅仅是 Windows 应用商店中下载的应用保存位置。在其他来源下载的应用程序大部分还是需要自己修改到D盘正确的目录。</p><p><img src="https://bu.dusays.com/2022/05/17/6282eb908ea26.png"></p><h3 id="配置输入法"><a href="#配置输入法" class="headerlink" title="配置输入法"></a>配置输入法</h3><p>Windows 安装完成后，默认输入法为拼音输入法，我个人喜欢将默认输入法改为 英语（美国），避免一些不必要的麻烦。<psw>中文输入法打游戏？</psw></p><p><img src="https://bu.dusays.com/2022/05/17/6282ec9f80076.png"></p><p>若没有在这里找到 <code>美式键盘</code> ，则需要在 <code>语言和区域</code> 中添加这个语言。至于为什么是 美式键盘？<psw>它的按键排列方式应该是你熟悉的</psw></p><p><img src="https://bu.dusays.com/2022/05/17/6282eddeddfef.png"></p><h2 id="应用安装"><a href="#应用安装" class="headerlink" title="应用安装"></a>应用安装</h2><h3 id="应用下载"><a href="#应用下载" class="headerlink" title="应用下载"></a>应用下载</h3><p>请一定要去应用官网下载！！！</p><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header">如何判断它是真正的官网呢</div><div class="body fs14"><ol><li>一般以主域名判断，例如腾讯旗下的大部分应用程序都是 <code>xxx.qq.com</code>，当然也是有例外，比如<code>微信</code>是腾讯旗下的，但它的域名为 <code>weixin.com</code>。</li><li>凭借网页UI判断，基本上下载站都是以 <code>程序简要描述;程序主要描述;程序下载按钮组成</code>，其最为标志性的一个东西就是 xx下载器。<psw>p2p下载器有多少人被它坑过呢</psw></li><li>经验</li></ol></div></div><div class="timenode" index="1"><div class="header">找不到怎么办啊喂</div><div class="body fs14"><p>也许你需要一个好的搜索引擎</p></div></div></div><details class="tag-plugin colorful folding" color="cyan" open><summary><span>一点点常用的应用软件官网</span></summary><div class="body"><table><thead><tr><th>应用程序</th><th>官网地址</th></tr></thead><tbody><tr><td>QQ</td><td><a href="https://im.qq.com/">https://im.qq.com/</a></td></tr><tr><td>微信</td><td><a href="https://weixin.com/">https://weixin.com</a></td></tr><tr><td>网易云音乐</td><td><a href="https://music.163.com/#/download">https://music.163.com/#/download</a></td></tr><tr><td>QQ音乐</td><td><a href="https://y.qq.com/download/index.html">https://y.qq.com/download/index.html</a></td></tr></tbody></table></div></details><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><p>鉴于国内搜索引擎的现状，推荐使用 <a href="https://cn.bing.com/">必应</a> 搜索引擎进行网页检索</p><h3 id="应用安装-1"><a href="#应用安装-1" class="headerlink" title="应用安装"></a>应用安装</h3><psw>终于可以安装应用了，我从官网下载的应用程序总可以放心懒人式一键安装了吧</psw><p>虽然说现如今的应用程序基本上没有捆绑安装了，但也难免会有例外。现在剩下的带有捆绑安装的应用程序一般都在安装开始之前或完成之后，会有一些默认勾选的复选框期待着你的粗心大意。<psw>下载器在下载过程中也会有捆绑安装哦</psw></p><p>另外注意修改安装目录为 D 盘的 <code>Program File</code> 或 <code>Program File(x86)</code> 目录。</p><ul><li><code>Program File</code>: 一般用于存放64位应用程序</li><li><code>Program File(x86)</code>: 一般用于存放32位应用程序</li></ul><p>大部分应用程序我们只需要简单改一下盘符就可以了，但也有小部分想要安装到 <code>AppData</code> 目录下，这种就只能辛苦下把不正确的部分修改过来。</p><p>下面我们以迅雷安装为例：</p><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header">首先我们进入迅雷的官网：https://www.xunlei.com/</div><div class="body fs14"><p>打开安装包，将安装目录改为 D 盘，然后安装</p></div></div><div class="timenode" index="1"><div class="header">![](https://bu.dusays.com/2022/05/17/6282fc08ad5c1.png)</div><div class="body fs14"><p>emmmm然后就无了</p></div></div></div><h3 id="管理启动项"><a href="#管理启动项" class="headerlink" title="管理启动项"></a>管理启动项</h3><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续~"></a>未完待续~</h2>]]></content>
    
    
    <summary type="html">个人对 Windows 的一些配置</summary>
    
    
    
    <category term="随笔" scheme="https://colsrch.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="Windows" scheme="https://colsrch.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN搭建教程</title>
    <link href="https://colsrch.cn/posts/c5ed2e3f/"/>
    <id>https://colsrch.cn/posts/c5ed2e3f/</id>
    <published>2022-03-24T08:08:39.000Z</published>
    <updated>2024-03-14T12:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>虚拟专用网络（VPN）允许您遍历不受信任的网络，就像在专用网络上一样。当您连接到不受信任的网络（例如酒店或咖啡店的 WiFi）时，它使您可以从智能手机或笔记本电脑，安全地访问 Internet。</p><p>OpenVPN 是功能齐全的，开源的传输层安全性（TLS）VPN 解决方案，可适应多种配置。</p><h2 id="使用-Docker-快速部署服务端"><a href="#使用-Docker-快速部署服务端" class="headerlink" title="使用 Docker 快速部署服务端"></a>使用 Docker 快速部署服务端</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>首先创建一个目录，用来存放 openvpn 相关文件。之后在目录内执行下面这两条命令</p><figure class="highlight shell"><figcaption><span>生成服务端配置文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v $(pwd)/conf:/etc/openvpn --log-driver=none --rm kylemanna/openvpn ovpn_genconfig -u udp://&lt;这里填写服务端公网ip&gt;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><figcaption><span>创建CA，配置证书</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v $(pwd)/conf:/etc/openvpn --log-driver=none --rm -it kylemanna/openvpn ovpn_initpki</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="yellow"><div class="title">注意</div><div class="body"><p>创建 CA 时设置的密码在后续创建客户端证书时需要用到</p></div></div><div class="tag-plugin colorful note" color="cyan"><div class="title">说明</div><div class="body"><p>默认生成的配置文件适用于本地局域网环境，即客户机无法访问外网，需要借助服务机连接外网（未实践，可能有误）</p></div></div><p>由于默认生成的配置文件会导致本机网络无法使用，这里我们需要对其进行修改：将 <code>$(pwd)/conf/openvpn.conf</code> 中的内容替换</p><figure class="highlight plaintext"><figcaption><span>openvpn.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server 10.8.0.0 255.255.255.0</span><br><span class="line">port 1194</span><br><span class="line">proto udp</span><br><span class="line">dev tun0</span><br><span class="line">verb 3</span><br><span class="line">key /etc/openvpn/pki/private/&lt;这里保留原来的文件名&gt;.key</span><br><span class="line">ca /etc/openvpn/pki/ca.crt</span><br><span class="line">cert /etc/openvpn/pki/issued/&lt;这里保留原来的文件名&gt;.crt</span><br><span class="line">dh /etc/openvpn/pki/dh.pem</span><br><span class="line">tls-auth /etc/openvpn/pki/ta.key</span><br><span class="line">key-direction 0</span><br><span class="line">keepalive 10 120</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">status /tmp/openvpn-status.log</span><br><span class="line">client-to-client</span><br><span class="line">user nobody</span><br><span class="line">group nogroup</span><br><span class="line">comp-lzo no</span><br><span class="line">push &quot;route 10.8.0.0 255.255.255.0&quot;</span><br></pre></td></tr></table></figure><p>其中，<code>10.8.0.0</code> 为 vpn 连接后的网段，可以根据自己需要修改子网和掩码。<code>server</code> 和 <code>push</code> 配置项需要保持一致</p><p>若需要让每个客户端每次连接的 ip 不变，可以往该配置文件中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig-pool-persist ipp.txt</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>提供两种方式启动，根据自己喜好选择。</p><div class="tag-plugin tabs"id="tab_1"><div class="nav-tabs"><div class="tab active"><a href="#tab_1-1">docker</a></div><div class="tab"><a href="#tab_1-2">docker-compose.yaml</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_1-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart always --cap-add NET_ADMIN --name openvpn -p 1194:1194/udp --privileged -v $(pwd)/conf:/etc/openvpn kylemanna/openvpn</span><br></pre></td></tr></table></figure><!-- endtab --></div><div class="tab-pane" id="tab_1-2"><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">openvpn:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">kylemanna/openvpn</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">cap_add:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NET_ADMIN</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">openvpn</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">1194</span><span class="string">:1194/udp</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf:/etc/openvpn</span></span><br></pre></td></tr></table></figure><!-- endtab --></div></div></div><h3 id="生成客户端配置"><a href="#生成客户端配置" class="headerlink" title="生成客户端配置"></a>生成客户端配置</h3><p>创建客户端证书，<code>$client_name</code> 替换为需要的名字，需要输入 CA 密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v $(pwd)/conf:/etc/openvpn --log-driver=none --rm -it kylemanna/openvpn easyrsa build-client-full $client_name nopass</span><br></pre></td></tr></table></figure><p>接下来创建一个目录将下列文件复制过去</p><ul><li><code>conf/pki/ca.crt</code></li><li><code>conf/pki/ta.key</code></li><li><code>conf/pki/issued/$client_name.crt</code>: 即 <code>client.crt</code></li><li><code>conf/pki/private/$client_name.key</code>: 即 <code>client.key</code></li></ul><p>接下来按照 <a href="#%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BF%9E%E6%8E%A5">配置客户端连接</a> 进行配置。</p><div class="tag-plugin colorful note" color="cyan"><div class="body"><p>下面介绍手动部署方法</p></div></div><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><ul><li>使用具有 sudo 非 root 用户进行搭建，下文称为 <code>OpenVPN 服务器</code></li></ul><div class="tag-plugin colorful note" color="yellow"><div class="title">注意</div><div class="body"><p>出于安全考虑，不推荐你直接使用 root 用户进行搭建。</p></div></div><psw>你要想用也拦不住你</psw><ul><li>使用单独的一台服务器作为专用的证书颁发机构（CA），下文称为 <code>CA服务器</code></li></ul><div class="tag-plugin colorful note" color="yellow"><div class="title">注意</div><div class="body"><p>虽然从技术上讲可以将你的 OpenVPN 服务器或本地计算机作为 CA，但不建议这样做，因为它可能会使你的 VPN 出现一些安全漏洞。根据 OpenVPN 官方文档，你应该将 CA 放置在专用于导入和签名证书请求的独立计算机上。</p></div></div><psw>都说了，你要想用咱也拦不住你</psw><h2 id="安装-OpenVPN-和-Easy-RSA"><a href="#安装-OpenVPN-和-Easy-RSA" class="headerlink" title="安装 OpenVPN 和 Easy-RSA"></a>安装 OpenVPN 和 Easy-RSA</h2><p>首先需要安装 OpenVPN 和 Easy-RSA。</p><p>Easy-RSA 是一种公钥基础结构（PKI）管理工具，你将在 OpenVPN Server 上使用该工具生成证书请求，然后在 CA Server 上进行验证和签名。</p><h3 id="CentOS-8-x2F-Rocky-8"><a href="#CentOS-8-x2F-Rocky-8" class="headerlink" title="CentOS 8 &#x2F; Rocky 8"></a>CentOS 8 &#x2F; Rocky 8</h3><p>CentOS 8 和 Rocky 8 默认不提供 OpenVPN 和 Easy-RSA，因此你需要启用 EPEL 存储库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install epel-release</span><br><span class="line">sudo dnf install openvpn easy-rsa</span><br></pre></td></tr></table></figure><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><p>Ubuntu 的默认仓库就已经有 OpenVPN 的包了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openvpn easy-rsa</span><br></pre></td></tr></table></figure><h3 id="配置-easy-rsa"><a href="#配置-easy-rsa" class="headerlink" title="配置 easy-rsa"></a>配置 easy-rsa</h3><p>安装完成后，你需要以非 root 用户身份在 OpenVPN 服务器上创建一个新目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/easy-rsa</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="cyan"><div class="body"><p>该目录位置可以自定义，此处假设目录位置为<code>~</code></p></div></div><p>现在，你需要从 easy-rsa 创建一个符号连接，以便将软件包安装到你刚刚创建的 easy-rsa 目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/share/easy-rsa/3/* ~/easy-rsa/</span><br></pre></td></tr></table></figure><p>最后，确保目录所有者是你当前使用的用户，并限制对该目录的访问:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> openvpn ~/easy-rsa</span><br><span class="line"><span class="built_in">chmod</span> 700 ~/easy-rsa</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="cyan"><div class="body"><p>假设你使用的是openvpn用户</p></div></div><h2 id="为-OpenVPN-创建-PKI"><a href="#为-OpenVPN-创建-PKI" class="headerlink" title="为 OpenVPN 创建 PKI"></a>为 OpenVPN 创建 PKI</h2><p>要在 OpenVPN 服务器上构建 PKI 目录，你需要使用一些默认值填充 vars 文件。</p><p>进入 easy-rsa 目录，然后创建和编辑 vars 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi vars</span><br></pre></td></tr></table></figure><p>打开文件后，粘贴下面两行:</p><figure class="highlight txt"><figcaption><span>~/easy-rsa/vars</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set_var EASYRSA_ALGO &quot;ec&quot;</span><br><span class="line">set_var EASYRSA_DIGEST &quot;sha512&quot;</span><br></pre></td></tr></table></figure><p>这些配置能够确保将你的私钥和证书请求配置为使用现代化的椭圆曲线密码术（ECC）为客户端和 OpenVPN 服务器生成密钥和安全签名。</p><p>填充 vars 文件后，即可继续创建 PKI 目录。</p><figure class="highlight bash"><figcaption><span>~/easy-rsa</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./easyrsa init-pki</span><br></pre></td></tr></table></figure><h2 id="配置-CA-服务器"><a href="#配置-CA-服务器" class="headerlink" title="配置 CA 服务器"></a>配置 CA 服务器</h2><p>先按照上面的步骤安装 <code>easy-rsa</code> ，然后配置 <code>easy-rsa</code> 和 创建 PKI</p><div class="tag-plugin colorful note" color="cyan"><div class="title">说明</div><div class="body"><p>如果你 CA 服务器和 OpenVPN 服务器一致，则直接执行下面的命令即可。</p></div></div><p>接下来执行该命令创建 CA 证书:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/easy-rsa</span><br><span class="line">./easyrsa build-ca</span><br></pre></td></tr></table></figure><p>首先会提示设置密码，用于 ca 对之后生成的 server 和 client 证书签名时使用，然后会提示设置 Country Name, State or Province Name, Locality Name, Organization Name, Organizational Unit Name, Common Name, Email Address, 可以键入回车使用默认的，也可以手动更改</p><h2 id="创建-Diffie-Hellman"><a href="#创建-Diffie-Hellman" class="headerlink" title="创建 Diffie-Hellman"></a>创建 Diffie-Hellman</h2><p>在 OpenVPN 服务端执行该命令创建 Diffie-Hellman, 完成后将其复制到 <code>/etc/openvpn/server</code> 目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/easy-rsa</span><br><span class="line">./easyrsa gen-dh</span><br><span class="line">sudo <span class="built_in">cp</span> pki/dh.pem /etc/openvpn/server</span><br></pre></td></tr></table></figure><blockquote><p>时间可能会有点长，请耐心等待。</p></blockquote><h2 id="创建一个OpenVPN服务器证书请求和私钥"><a href="#创建一个OpenVPN服务器证书请求和私钥" class="headerlink" title="创建一个OpenVPN服务器证书请求和私钥"></a>创建一个OpenVPN服务器证书请求和私钥</h2><p>现在，通过使用 gen-req 选项调用 easyrsa，后跟机器的通用名称（CN）。CN可以是你喜欢的任何内容，但最好是具有一定的描述性。在这里，OpenVPN Server 的 CN 将设置为 server。后面还需要包括 nopass 选项。否则，将对请求的文件进行密码保护，这可能会在以后导致权限问题。</p><div class="tag-plugin colorful note" color="yellow"><div class="title">注意</div><div class="body"><p>如果你在这里选择 server 以外的名称，则必须调整以下一些内容。例如，将生成的文件复制到 &#x2F;etc&#x2F;openvpn&#x2F;server 目录时，你必须替换正确的名称。你还必须修改 &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;server.conf 文件，以指向正确的 .crt 和 .key 文件</p></div></div><figure class="highlight bash"><figcaption><span>~/easy-rsa</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./easyrsa gen-req server nopass</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Common Name (eg: your user, host, or server name) [server]:  # 这里直接回车</span><br><span class="line"></span><br><span class="line">Keypair and certificate request completed. Your files are:</span><br><span class="line">req: /home/sammy/easy-rsa/pki/reqs/server.req</span><br><span class="line">key: /home/sammy/easy-rsa/pki/private/server.key</span><br></pre></td></tr></table></figure><p>这会为 OpenVPN 服务器创建一个 server.key 私钥和一个名为 server.req 的证书请求文件。将该密钥复制到 <code>/etc/openvpn/server</code> 目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> ~/easy-rsa/pki/private/server.key /etc/openvpn/server/</span><br></pre></td></tr></table></figure><p>完成这些步骤后，你已经成功为您的 OpenVPN 服务器创建了私钥，并且生成了证书签名请求(req)。CSR 现在可以由你的 CA 签名了。</p><h2 id="签署-OpenVPN-服务器的证书请求"><a href="#签署-OpenVPN-服务器的证书请求" class="headerlink" title="签署 OpenVPN 服务器的证书请求"></a>签署 OpenVPN 服务器的证书请求</h2><p>在 OpenVPN 服务器上，使用 scp 或其他传输方法将 server.req 证书请求复制到 CA 服务器以进行签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ~/easy-rsa/pki/reqs/server.req ca_user@your_ca_server_ip:/tmp</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="cyan"><div class="title">说明</div><div class="body"><p>若你的 CA 服务器为 OpenVPN 服务器，则你无需复制证书请求，无需导入证书请求。直接运行下面的 sign-req 命令即可</p></div></div><p>现在，以拥有 easy-rsa 目录的非 root 用户登录到 CA 服务器，使用 easyrsa 脚本导入证书请求:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/easy-rsa</span><br><span class="line">./easyrsa import-req /tmp/server.req server</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">. . .</span><br><span class="line">The request has been successfully imported with a short name of: server</span><br><span class="line">You may now use this name to perform signing operations on this request.</span><br></pre></td></tr></table></figure><p>接下来运行带有 sign-req 选项的 easyrsa 脚本，然后时请求类型和公用名来对请求进行签名。请求类型可以是 client 或 server。由于我们在处理 OpenVPN 服务器的证书请求，因此请确保使用服务器请求类型(server):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./easyrsa sign-req server server</span><br></pre></td></tr></table></figure><p>然后系统将提示你确认请求是否来自受信任的来源。输入 yes，然后按 Enter 确认:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">You are about to sign the following certificate.</span><br><span class="line">Please check over the details shown below for accuracy. Note that this request</span><br><span class="line">has not been cryptographically verified. Please be sure it came from a trusted</span><br><span class="line">source or that you have verified the request checksum with the sender.</span><br><span class="line"></span><br><span class="line">Request subject, to be signed as a server certificate for 3650 days:</span><br><span class="line"></span><br><span class="line">subject=</span><br><span class="line">commonName = server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Type the word &#x27;yes&#x27; to continue, or any other input to abort.</span><br><span class="line">Confirm request details: yes</span><br><span class="line">. . .</span><br><span class="line">Certificate created at: /home/ca/easy-rsa/pki/issued/server.crt</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="cyan"><div class="title">注意</div><div class="body"><p>如果你加密了 CA 私钥，则还会提示你输入密码</p></div></div><p>完成配置后，请将 server.crt 和 ca.crt 文件从 CA 服务器复制到 OpenVPN 服务器:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp pki/issued/server.crt openvpn@your_vpn_server_ip:/tmp</span><br><span class="line">scp pki/ca.crt openvpn@your_vpn_server_ip:/tmp</span><br></pre></td></tr></table></figure><p>现在回到 OpenVPN 服务器，将文件从 <code>/tmp</code> 复制到 <code>/etc/openvpn/server</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /tmp/&#123;server.crt,ca.crt&#125; /etc/openvpn/server</span><br></pre></td></tr></table></figure><h2 id="配置OpenVPN加密材料"><a href="#配置OpenVPN加密材料" class="headerlink" title="配置OpenVPN加密材料"></a>配置OpenVPN加密材料</h2><p>为了增加安全性，我们需要添加一个额外的共享密钥，服务器和所有客户端将使用该密钥，并将其与 OpenVPN 的 tls-crypt 指令一起使用。此选项用于混淆服务器和客户端最初相互连接时使用的 TLS 证书。 OpenVPN 服务器还使用它对传入的数据包进行快速检查: 如果数据包是使用预共享密钥签名的，则服务器会对其进行处理；如果未签名，则服务器知道它来自不受信任的来源，可以丢弃它而不必执行其他解密工作。</p><p>此选项将帮助确保您的 OpenVPN 服务器能够应对未经身份验证的流量，端口扫描和拒绝服务攻击，这些攻击可能占用服务器资源。这也使识别 OpenVPN 网络流量变得更加困难。</p><p>请在 OpenVPN 服务器上的 ~&#x2F;easy-rsa 目录中运行以下命令: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/easy-rsa</span><br><span class="line">openvpn --genkey --secret ta.key</span><br></pre></td></tr></table></figure><p>然后将其复制到 <code>/etc/openvpn/server</code> 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> ta.key /etc/openvpn/server</span><br></pre></td></tr></table></figure><p>到这里，服务端所需的文件都齐全了，现在可以为需要使用这个 VPN 的用户创建客户端证书和密钥文件了。</p><h2 id="生成客户端证书和密钥对"><a href="#生成客户端证书和密钥对" class="headerlink" title="生成客户端证书和密钥对"></a>生成客户端证书和密钥对</h2><p>接下来将指导你生成一个客户端证书和密钥对。如果你有多个客户端，则可以为每个客户端重复这个过程。</p><div class="tag-plugin colorful note" color="yellow"><div class="title">注意</div><div class="body"><p>每个客户端的名称都必须为唯一的</p></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/easy-rsa</span><br><span class="line">./easyrsa gen-req client1 nopass</span><br></pre></td></tr></table></figure><p>接下来可以再创建一个目录，用于收集客户端所需文件，同样的，建议将该目录权限改为 700</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/client</span><br><span class="line">sudo <span class="built_in">chown</span> openvpn ~/client</span><br><span class="line"><span class="built_in">chmod</span> 700 ~/client</span><br></pre></td></tr></table></figure><p>将刚刚生成的 client1.key 复制到该目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> ~/easy-rsa/pki/private/client1.key ~/client</span><br></pre></td></tr></table></figure><p>然后将 client1.req 文件传输到你的 CA Server:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp pki/reqs/client1.req ca@your_ca_server_ip:/tmp</span><br></pre></td></tr></table></figure><p>登录到 CA Server，然后进入 easy-rsa 目录，导入证书请求并签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/easy-rsa</span><br><span class="line">./easyrsa import-req /tmp/client1.req client1</span><br><span class="line">./easarsa sign-req client client1</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="cyan"><div class="body"><p>这里你必须指定请求类型为客户端类型(client)</p></div></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Type the word &#x27;yes&#x27; to continue, or any other input to abort.</span><br><span class="line">Confirm request details: yes</span><br></pre></td></tr></table></figure><p>若你对 CA 密钥进行了加密，你还需输入 CA 密钥的密码。</p><p>接下来将生成的客户端证书文件传回服务器:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp pki/issued/client1.crt openvpn@your_server_ip:/tmp</span><br></pre></td></tr></table></figure><p>然后将其移动到 client 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /tmp/client1.crt ~/client</span><br></pre></td></tr></table></figure><p>最后 OpenVPN 客户端还需要 <code>ca.crt</code> 和 <code>ta.key</code> 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/openvpn/server/&#123;ca.crt,ta.key&#125; ~/client</span><br></pre></td></tr></table></figure><h2 id="配置-OpenVPN-服务器"><a href="#配置-OpenVPN-服务器" class="headerlink" title="配置 OpenVPN 服务器"></a>配置 OpenVPN 服务器</h2><p>首先，复制样本server.conf文件做为您自己的配置文件的起点，并编辑它:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /usr/share/doc/openvpn/sample/sample-config-files/server.conf /etc/openvpn/server/</span><br><span class="line">sudo vi /etc/openvpn/server/server.conf</span><br></pre></td></tr></table></figure><p>在文件底部添加下列内容，<code>#</code> 后面的是注释，请勿将其写入配置</p><figure class="highlight plaintext"><figcaption><span>/etc/openvpn/server/server.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">local 0.0.0.0</span><br><span class="line">port 1194    # 使用端口</span><br><span class="line">proto udp    # 使用协议</span><br><span class="line">dev tun      # 网卡名称</span><br><span class="line">ca ca.crt</span><br><span class="line">cert server.crt</span><br><span class="line">key server.key</span><br><span class="line">dh dh.pem</span><br><span class="line">server 10.8.0.0 255.255.255.0    # VPN网段及掩码</span><br><span class="line">ifconfig-pool-persist ipp.txt</span><br><span class="line">push &quot;route 10.8.0.0 255.255.255.0&quot;    # 流量转发，如需转发其它流量往下添加即可</span><br><span class="line">client-to-client</span><br><span class="line">keepalive 10 120</span><br><span class="line">tls-auth ta.key 0</span><br><span class="line">cipher AES-256-CBC</span><br><span class="line">comp-lzo</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">status openvpn-status.log</span><br><span class="line">verb 3</span><br></pre></td></tr></table></figure><p>然后启动 OpenVPN Server 并开启自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start openvpn-server@server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> openvpn-server@server</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="cyan"><div class="body"><p>若你使用了防火墙，记得打开对应端口</p></div></div><h2 id="配置客户端连接"><a href="#配置客户端连接" class="headerlink" title="配置客户端连接"></a>配置客户端连接</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>先安装 openvpn，如CentOS 8 &#x2F; Rocky 8:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install epel-release</span><br><span class="line">sudo dnf install openvpn</span><br></pre></td></tr></table></figure><p>然后将 OpenVPN 服务端 client 目录中的 <code>ca.crt</code>、<code>ta.key</code>、<code>client.key</code>、<code>client.crt</code> 文件复制到客户端的 <code>/etc/openvpn/client</code> 目录。</p><figure class="highlight bash"><figcaption><span>openvpn-server</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ~/client/&#123;ca.crt,ta.key,client.key,client.crt&#125; client@your_client_ip:/tmp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>openvpn-client</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> /tmp/&#123;ca.crt,ta.key,client.key,client.crt&#125; /etc/openvpn/client/</span><br></pre></td></tr></table></figure><p>接下来复制样本 client.conf 文件做为你自己的配置文件起点，并编辑它:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /usr/share/doc/openvpn/sample/sample-config-files/client.conf /etc/openvpn/client/</span><br><span class="line">sudo vi /etc/openvpn/client/client.conf</span><br></pre></td></tr></table></figure><p>在文件底部添加下列内容，<code>#</code> 后面的是注释，请勿将其写入配置</p><figure class="highlight plaintext"><figcaption><span>/etc/openvpn/client/client.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">client</span><br><span class="line">dev tun    # 网卡名</span><br><span class="line">proto udp  # OpenVPN服务器使用的协议</span><br><span class="line">remote x.x.x.x 1194    # OpenVPN 服务器及端口</span><br><span class="line">resolv-retry infinite</span><br><span class="line">nobind</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">remote-cert-tls server</span><br><span class="line">ca ca.crt</span><br><span class="line">cert client1.crt</span><br><span class="line">key client1.key</span><br><span class="line">tls-auth ta.key 1</span><br><span class="line">cipher AES-256-CBC</span><br><span class="line">comp-lzo</span><br><span class="line">verb 3</span><br></pre></td></tr></table></figure><p>最后启动 OpenVPN Client 并设置开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start openvpn-client@client</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> openvpn-client@client</span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>首先前往 OpenVPN 官网下载 Windows 客户端应用</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="OpenVPN Client" href="https://openvpn.net/vpn-client/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill=""><div class="left"><span class="title">OpenVPN Client</span><span class="cap link footnote">https://openvpn.net/vpn-client/</span></div><div class="right"><div class="lazy img" data-bg="https://bu.dusays.com/2022/03/25/1d687cdc60586.png"></div></div></a></div><p>然后将 OpenVPN 服务端 client 目录中的 <code>ca.crt</code>、<code>ta.key</code>、<code>client.key</code>、<code>client.crt</code> 文件复制到 <code>C:\Users\自己的用户名\OpenVPN\config</code> 目录中</p><p>接下来在该目录创建一个 <code>config.ovpn</code> 文件，并编辑它 (<code>#</code> 后面的是注释，请勿将其写入配置)</p><figure class="highlight plaintext"><figcaption><span>config.ovpn</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">client</span><br><span class="line">dev tun    # 网卡名</span><br><span class="line">proto udp  # OpenVPN服务器使用的协议</span><br><span class="line">remote x.x.x.x 1194    # OpenVPN 服务器及端口</span><br><span class="line">resolv-retry infinite</span><br><span class="line">nobind</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">remote-cert-tls server</span><br><span class="line">ca ca.crt</span><br><span class="line">cert client1.crt</span><br><span class="line">key client1.key</span><br><span class="line">tls-auth ta.key 1</span><br><span class="line">cipher AES-256-CBC</span><br><span class="line">comp-lzo</span><br><span class="line">verb 3</span><br></pre></td></tr></table></figure><p>最后启动 OpenVPN Client 应用，右键任务栏托盘中的 OpenVPN 图标，点击 <code>连接</code>。</p><p><img src="https://bu.dusays.com/2022/03/25/8f80a869190df.png"></p>]]></content>
    
    
    <summary type="html">如何搭建和配置OpenVPN服务端及客户端</summary>
    
    
    
    <category term="教程" scheme="https://colsrch.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="OpenVPN" scheme="https://colsrch.cn/tags/OpenVPN/"/>
    
  </entry>
  
</feed>
